<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from wamv_gazebo.urdf.xacro         | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Basic WAM-V with gazebo plugins for dynamics -->
<robot name="WAM-V">
  <link name="wamv/left_battery_link">
    <visual name="left_battery_visual">
      <origin rpy="0 0 0" xyz="0 -1.03 -.45"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/battery/mesh/battery.dae"/>
      </geometry>
    </visual>
    <collision name="left_battery_collision">
      <origin rpy="0 0 0" xyz="0 0 .15"/>
      <geometry>
        <box size=".6 .4 .31"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy=" 0 0 0" xyz="0 0 .15"/>
      <mass value="23.5"/>
      <inertia ixx="0.5015291666666667" ixy="0" ixz="0" iyy="0.8931958333333333" iyz="0" izz="1.0183333333333333"/>
    </inertial>
  </link>
  <joint name="wamv/left_chasis_battery_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 1 0.45"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/left_battery_link"/>
  </joint>
  <link name="wamv/right_battery_link">
    <visual name="right_battery_visual">
      <origin rpy="0 0 0" xyz="0 -1.03 -.45"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/battery/mesh/battery.dae"/>
      </geometry>
    </visual>
    <collision name="right_battery_collision">
      <origin rpy="0 0 0" xyz="0 0 .15"/>
      <geometry>
        <box size=".6 .4 .31"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy=" 0 0 0" xyz="0 0 .15"/>
      <mass value="23.5"/>
      <inertia ixx="0.5015291666666667" ixy="0" ixz="0" iyy="0.8931958333333333" iyz="0" izz="1.0183333333333333"/>
    </inertial>
  </link>
  <joint name="wamv/right_chasis_battery_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -1 0.45"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/right_battery_link"/>
  </joint>
  <link name="wamv/base_link">
  </link>
  <gazebo reference="wamv/base_link">
    <sensor name="contactsensor_sensor" type="contact">
      <always_on>true</always_on>
      <updaterate>100.0</updaterate>
      <contact>
        <collision>wamv/base_link_fixed_joint_lump__left_float_collision_17</collision>
        <collision>wamv/base_link_fixed_joint_lump__left_mid_float_collision_18</collision>
        <collision>wamv/base_link_fixed_joint_lump__left_front_float_collision_19</collision>
        <collision>wamv/base_link_fixed_joint_lump__right_float_collision_29</collision>
        <collision>wamv/base_link_fixed_joint_lump__right_mid_float_collision_30</collision>
        <collision>wamv/base_link_fixed_joint_lump__right_front_float_collision_31</collision>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="gazebo_ros_bumper_controller">
        <bumperTopicName>wamv/bumper_states</bumperTopicName>
        <frameName>world</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="wamv/dummy_joint" type="fixed">
    <parent link="wamv/base_link"/>
    <child link="wamv/dummy_link"/>
  </joint>
  <!-- Basic model of the 16' WAM-V USV -->
  <link name="wamv/dummy_link">
    <visual>
      <geometry>
        <mesh filename="package://wamv_description/models/WAM-V-Base/mesh/WAM-V-Base.stl"/>
      </geometry>
      <material name="wamv_visual_material">
        <color rgba=".175 .175 .175  1.0"/>
      </material>
    </visual>
    <!-- Main float -->
    <collision name="left_float">
      <origin rpy="0 1.57 0" xyz="-0.4 1.03 0.2"/>
      <geometry>
        <cylinder length="4" radius="0.2"/>
      </geometry>
    </collision>
    <collision name="left_mid_float">
      <origin rpy="0 1.38 0" xyz="1.85 1.03 0.3"/>
      <geometry>
        <cylinder length="0.5" radius="0.17"/>
      </geometry>
    </collision>
    <collision name="left_front_float">
      <origin rpy="0 1.3 0" xyz="2.3 1.03 0.4"/>
      <geometry>
        <cylinder length="0.45" radius="0.12"/>
      </geometry>
    </collision>
    <!-- Front beam -->
    <collision name="front_left_beam_lower">
      <origin rpy="0.78 0 0" xyz="0.9 0.85 1"/>
      <geometry>
        <cylinder length="0.5" radius="0.04"/>
      </geometry>
    </collision>
    <collision name="front_left_beam_upper">
      <origin rpy="1.35 0 0" xyz="0.9 0.6 1.18"/>
      <geometry>
        <cylinder length="0.2" radius="0.04"/>
      </geometry>
    </collision>
    <!-- Mid beam -->
    <collision name="mid_left_beam_lower">
      <origin rpy="0.1 0.25 0" xyz="-0.65 0.99 0.7"/>
      <geometry>
        <cylinder length="0.45" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="mid_left_beam_medium">
      <origin rpy="0.75 0.25 0" xyz="-0.57 0.87 1.05"/>
      <geometry>
        <cylinder length="0.32" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="mid_left_beam_upper">
      <origin rpy="1.35 0.25 0" xyz="-0.55 0.65 1.17"/>
      <geometry>
        <cylinder length="0.3" radius="0.03"/>
      </geometry>
    </collision>
    <!-- Rear beam -->
    <collision name="rear_left_beam_lower">
      <origin rpy="0 -0.15 0" xyz="-0.74 1.03 0.7"/>
      <geometry>
        <cylinder length="0.45" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="rear_left_beam_medium">
      <origin rpy="0.75 -0.15 0" xyz="-0.79 0.91 1.05"/>
      <geometry>
        <cylinder length="0.32" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="rear_left_beam_upper">
      <origin rpy="1.45 -0.15 0" xyz="-0.81 0.67 1.18"/>
      <geometry>
        <cylinder length="0.3" radius="0.03"/>
      </geometry>
    </collision>
    <!-- Joint -->
    <collision name="left_joint">
      <origin rpy="0 -0.6 0" xyz="0.58 1.03 0.6"/>
      <geometry>
        <box size="0.65 0.2 0.1"/>
      </geometry>
    </collision>
    <!-- Main float -->
    <collision name="right_float">
      <origin rpy="0 1.57 0" xyz="-0.4 -1.03 0.2"/>
      <geometry>
        <cylinder length="4" radius="0.2"/>
      </geometry>
    </collision>
    <collision name="right_mid_float">
      <origin rpy="0 1.38 0" xyz="1.85 -1.03 0.3"/>
      <geometry>
        <cylinder length="0.5" radius="0.17"/>
      </geometry>
    </collision>
    <collision name="right_front_float">
      <origin rpy="0 1.3 0" xyz="2.3 -1.03 0.4"/>
      <geometry>
        <cylinder length="0.45" radius="0.12"/>
      </geometry>
    </collision>
    <!-- Front beam -->
    <collision name="front_right_beam_lower">
      <origin rpy="-0.78 0 0" xyz="0.9 -0.85 1"/>
      <geometry>
        <cylinder length="0.5" radius="0.04"/>
      </geometry>
    </collision>
    <collision name="front_right_beam_upper">
      <origin rpy="-1.35 0 0" xyz="0.9 -0.6 1.18"/>
      <geometry>
        <cylinder length="0.2" radius="0.04"/>
      </geometry>
    </collision>
    <!-- Mid beam -->
    <collision name="mid_right_beam_lower">
      <origin rpy="-0.1 0.25 0" xyz="-0.65 -0.99 0.7"/>
      <geometry>
        <cylinder length="0.45" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="mid_right_beam_medium">
      <origin rpy="-0.75 0.25 0" xyz="-0.57 -0.87 1.05"/>
      <geometry>
        <cylinder length="0.32" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="mid_right_beam_upper">
      <origin rpy="-1.35 0.25 0" xyz="-0.55 -0.65 1.17"/>
      <geometry>
        <cylinder length="0.3" radius="0.03"/>
      </geometry>
    </collision>
    <!-- Rear beam -->
    <collision name="rear_right_beam_lower">
      <origin rpy="0 -0.15 0" xyz="-0.74 -1.03 0.7"/>
      <geometry>
        <cylinder length="0.45" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="rear_right_beam_medium">
      <origin rpy="-0.75 -0.15 0" xyz="-0.79 -0.91 1.05"/>
      <geometry>
        <cylinder length="0.32" radius="0.03"/>
      </geometry>
    </collision>
    <collision name="rear_right_beam_upper">
      <origin rpy="-1.45 -0.15 0" xyz="-0.81 -0.67 1.18"/>
      <geometry>
        <cylinder length="0.3" radius="0.03"/>
      </geometry>
    </collision>
    <!-- Joint -->
    <collision name="right_joint">
      <origin rpy="0 -0.6 0" xyz="0.58 -1.03 0.6"/>
      <geometry>
        <box size="0.65 0.2 0.1"/>
      </geometry>
    </collision>
    <!-- Top base -->
    <collision name="top_base">
      <origin rpy="0 0 0" xyz="0 -0 1.25"/>
      <geometry>
        <box size="1.85 1 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <!-- From WAM-V spec sheet -->
      <mass value="180.0"/>
      <inertia ixx="120.0" ixy="0.0" ixz="0.0" iyy="393" iyz="0.0" izz="446.0"/>
    </inertial>
  </link>
  <gazebo reference="wamv/dummy_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <!--Gazebo Plugin for simulating WAM-V dynamics-->
  <gazebo>
    <plugin filename="libusv_gazebo_dynamics_plugin.so" name="usv_dynamics_wamv_dynamics_plugin">
      <bodyName>wamv/base_link</bodyName>
      <!-- Must be same as the ocean model!-->
      <waterLevel>0</waterLevel>
      <waterDensity>997.8</waterDensity>
      <!-- Added mass -->
      <xDotU>0.0</xDotU>
      <yDotV>0.0</yDotV>
      <nDotR>0.0</nDotR>
      <!-- Linear and quadratic drag -->
      <xU>51.3</xU>
      <xUU>72.4</xUU>
      <yV>40.0</yV>
      <yVV>0.0</yVV>
      <zW>500.0</zW>
      <kP>50.0</kP>
      <mQ>50.0</mQ>
      <nR>400.0</nR>
      <nRR>0.0</nRR>
      <!-- General dimensions -->
      <!--<boatArea>2.2</boatArea>-->
      <hullRadius>0.213</hullRadius>
      <boatWidth>2.4</boatWidth>
      <boatLength>4.9</boatLength>
      <!-- Length discretization, AKA, "N" -->
      <length_n>2</length_n>
      <!-- Wave model -->
      <wave_model>ocean_waves</wave_model>
    </plugin>
  </gazebo>
  <gazebo>
    <link name="wamv_external_link"/>
    <joint name="wamv_external_pivot_joint" type="universal">
      <parent>wamv::wamv/base_link</parent>
      <child>wamv_external_link</child>
      <axis>
        <xyz>1 0 0</xyz>
      </axis>
      <axis2>
        <xyz>0 1 0</xyz>
      </axis2>
    </joint>
    <joint name="wamv_external_riser" type="prismatic">
      <parent>world</parent>
      <child>wamv_external_link</child>
      <axis>
        <limit>
          <lower>-3</lower>
          <upper>3</upper>
        </limit>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
  </gazebo>
  <!-- Monocular Camera -->
  <link name="wamv/front_camera_link">
    <visual name="front_camera_visual">
      <origin rpy="0 0 1.5707963267948966" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="front_camera_lens_collision">
      <origin rpy="0 1.5707963267948966 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="front_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="wamv/front_camera_link_optical">
    </link>
  <!-- Sensor post -->
  <link name="wamv/front_camera_post_link">
    <visual>
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
      <material name="front_camera_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="front_camera_post_collision">
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15885000000000002"/>
      <inertia ixx="0.0004146717033750001" ixy="0" ixz="0" iyy="0.0004146717033750001" iyz="0" izz="4.5875880000000004e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="wamv/front_camera_post_arm_link">
    <visual name="front_camera_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="front_camera_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="wamv/base_to_front_camera_post_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.7 0.3 1.38475"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/front_camera_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="wamv/front_camera_post_to_front_camera_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.08825000000000008"/>
    <parent link="wamv/front_camera_post_link"/>
    <child link="wamv/front_camera_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to camera joint -->
  <joint name="wamv/front_camera_post_arm_to_front_camera_joint" type="fixed">
    <origin rpy="0 0.2617993877991494 0" xyz="0.02 0 0.027"/>
    <parent link="wamv/front_camera_post_arm_link"/>
    <child link="wamv/front_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="wamv/front_camera_to_front_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="wamv/front_camera_link"/>
    <child link="wamv/front_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="wamv/front_camera_link">
    <sensor name="front_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="front_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_front_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>wamv/sensors/cameras/front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>wamv/front_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="wamv/front_camera_post_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="wamv/gps_wamv_link">
    <visual name="gps_wamv_visual">
      <geometry>
        <mesh filename="package://wamv_gazebo/models/gps/mesh/gps.dae"/>
      </geometry>
    </visual>
    <collision name="gps_wamv_collision_base">
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <cylinder length="0.05" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="gps_wamv_collision_antenna">
      <origin rpy="0 0 0" xyz="0 0 0.11"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.006458" ixy="0.0" ixz="0.0" iyy="0.006458" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <joint name="wamv/gps_wamv_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="-0.85 0 1.3"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/gps_wamv_link"/>
  </joint>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_plugin_gps_wamv">
      <updateRate>15</updateRate>
      <alwaysOn>true</alwaysOn>
      <bodyName>wamv/gps_wamv_link</bodyName>
      <!-- Manually prepend namespace to tf frame. -->
      <frameId>wamv/gps_wamv_link</frameId>
      <topicName>wamv/sensors/gps/gps/fix</topicName>
      <!-- Note that the hector_gazebo_ros_gps plugin uses NWU coordinates
             for reporting velocities.  This may cause problems if localization
             requires velocity in ENU.
             See Issue #64 in VRX project for details
             https://bitbucket.org/osrf/vrx/issues/64 -->
      <velocityTopicName>wamv/sensors/gps/gps/fix_velocity</velocityTopicName>
      <!-- Tell the plugin to use the spherical_coordiantes parameters
	     from SDF.
	     https://github.com/tu-darmstadt-ros-pkg/hector_gazebo/blob/melodic-devel/hector_gazebo_plugins/src/gazebo_ros_gps.cpp#L101
	-->
      <useWorldSphericalCoordinates>true</useWorldSphericalCoordinates>
      <offset>0.0 0.0 0.0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>0 0 0</gaussianNoise>
      <velocityOffset>0.0 0.0 0.0</velocityOffset>
      <velocityDrift>0.0 0.0 0.0</velocityDrift>
      <velocityGaussianNoise>0.0 0.0 0.0</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <link name="wamv/imu_wamv_link">
    <visual name="imu_wamv_visual">
      &gt;
        
      <geometry>
        <box size="0.05 0.025 0.005"/>
      </geometry>
      <material name="imu_wamv_visual_material">
        <color rgba="1.0 0.0 00 1.0"/>
      </material>
    </visual>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000083" ixy="0.0" ixz="0.0" iyy="0.000083" iyz="0.0" izz="0.0125"/>
    </inertial>
  </link>
  <joint name="wamv/imu_wamv_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="0.3 -0.2 1.3"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/imu_wamv_link"/>
  </joint>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_plugin_imu_wamv">
      <updateRate>15</updateRate>
      <bodyName>wamv/imu_wamv_link</bodyName>
      <topicName>wamv/sensors/imu/imu/data</topicName>
      <serviceName>wamv/sensors/imu_service</serviceName>
      <!-- Manually prepend namespace to tf frame. -->
      <frameId>wamv/imu_wamv_link</frameId>
      <alwaysOn>true</alwaysOn>
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelDriftFrequency>0.00027 0.00027 0.000027</accelDriftFrequency>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.00027 0.00027 0.000027</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawDriftFrequency>0.00027</yawDriftFrequency>
      <yawGaussianNoise>0.0</yawGaussianNoise>
    </plugin>
  </gazebo>
  <!-- 3d lidar sensor -->
  <link name="wamv/lidar_wamv_link">
    <visual name="lidar_wamv_visual">
      <origin rpy="0 0 0" xyz="0 0 -0.035"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_wamv_collision">
      <geometry>
        <cylinder length="0.075" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00109375" ixy="0" ixz="0" iyy="0.00109375" iyz="0" izz="0.00125"/>
    </inertial>
  </link>
  <!-- Sensor post -->
  <link name="wamv/lidar_wamv_post_link">
    <!-- <visual>
        <geometry>
          <cylinder radius="${post_radius}" length="${post_length}"/>
        </geometry>
        <material name="${name}_post_material">
          <color rgba="0.0 0.0 0.0 1.0"/>
        </material>
      </visual> -->
    <collision name="lidar_wamv_post_collision">
      <geometry>
        <cylinder length="0.15350000000000003" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.13815000000000002"/>
      <inertia ixx="0.0002732552891250001" ixy="0" ixz="0" iyy="0.0002732552891250001" iyz="0" izz="3.989772000000001e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="wamv/lidar_wamv_post_arm_link">
    <visual name="lidar_wamv_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_wamv_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="wamv/base_to_lidar_wamv_post_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.8300000000000001 -0.3 1.37325"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/lidar_wamv_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="wamv/lidar_wamv_post_to_lidar_wamv_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.07674999999999992"/>
    <parent link="wamv/lidar_wamv_post_link"/>
    <child link="wamv/lidar_wamv_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to lidar joint -->
  <joint name="wamv/lidar_wamv_post_arm_to_lidar_wamv_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.04 0 0.05"/>
    <parent link="wamv/lidar_wamv_post_arm_link"/>
    <child link="wamv/lidar_wamv_link"/>
  </joint>
  <gazebo reference="wamv/lidar_wamv_link">
    <sensor name="lidar_wamv_sensor" type="gpu_ray">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>18750.0</samples>
            <resolution>0.1</resolution>
            <min_angle>-3.141592653589793</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.2617993877991494</min_angle>
            <max_angle>0.2617993877991494</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>130</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="lidar_wamv_plugin">
        <topicName>wamv/sensors/lidars/lidar_wamv/points</topicName>
        <frameName>wamv/lidar_wamv_link</frameName>
        <min_intensity>0</min_intensity>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="wamv/lidar_wamv_post_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!--specs for 16 beam lidar are implemented by default.
          See wamv_3d_lidar for those-->
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="p3d_plugin_p3d_wamv">
      <bodyName>wamv/base_link</bodyName>
      <frameName>map</frameName>
      <updateRate>10.0</updateRate>
      <topicName>wamv/sensors/position/p3d_wamv</topicName>
      <xyzOffset>0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <gaussianNoise>0</gaussianNoise>
    </plugin>
  </gazebo>
  <link name="wamv/pinger">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
    <collision name="pinger_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="wamv/pinger_pinger_joint" type="fixed">
    <origin rpy="0 0 0" xyz="1.0 0 -1.0"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/pinger"/>
  </joint>
  <gazebo>
    <plugin filename="libusv_gazebo_acoustic_pinger_plugin.so" name="pinger_plugin">
      <frameId>wamv/pinger</frameId>
      <topicName>wamv/sensors/pingers/pinger/range_bearing</topicName>
      <setPositionTopicName>wamv/sensors/pingers/pinger/set_pinger_position</setPositionTopicName>
      <rangeNoise>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>3.0</stddev>
        </noise>
      </rangeNoise>
      <bearingNoise>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </bearingNoise>
      <elevationNoise>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </elevationNoise>
    </plugin>
  </gazebo>
  <link name="wamv/ball_shooter_base_link">
    <visual name="ball_shooter_base_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/ball_shooter/meshes/ball_shooter_base.dae"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="-0.02 0 0.05"/>
      <mass value="0.5"/>
      <inertia ixx="0.00083" ixy="0.0" ixz="0.0" iyy="0.00052083" iyz="0.0" izz="0.00052083"/>
    </inertial>
  </link>
  <link name="wamv/ball_shooter_launcher_link">
    <visual name="ball_shooter_launcher_visual">
      <!-- The cylinder has a -15deg pitch. We compensate for that here.
             That way, if the user passes a 0 deg rotation the cylinder will
             be parallel to the ground -->
      <!-- <origin xyz="-0.0204 0 0.107877" rpy="0 0.261799 0" /> -->
      <origin rpy="0 0.261799 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/ball_shooter/meshes/ball_shooter_launcher.dae"/>
      </geometry>
    </visual>
    <!-- Uncomment to see the pose where the ball is teleported -->
    <!-- <visual name="${name}_visual_ball">
        <origin xyz="0.14 0 0" rpy="0 0 0" />
        <geometry>
          <sphere radius="0.0285"/>
        </geometry>
      </visual> -->
    <collision name="ball_shooter_collision">
      <origin rpy="0 0.261799 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.3 0.3 0.2"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 -1.5708 0" xyz="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.001779167" ixy="0.0" ixz="0.0" iyy="0.001779167" iyz="0.0" izz="0.000225"/>
    </inertial>
  </link>
  <joint name="wamv/ball_shooter_base_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="0.54 0.3 1.296"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/ball_shooter_base_link"/>
  </joint>
  <joint name="wamv/ball_shooter_launcher_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 -1.04 0" xyz="-0.0204 0 0.107877"/>
    <parent link="wamv/ball_shooter_base_link"/>
    <child link="wamv/ball_shooter_launcher_link"/>
  </joint>
  <gazebo>
    <plugin filename="libball_shooter_plugin.so" name="ball_shooter_plugin">
      <projectile>
        <model_name>blue_projectile</model_name>
        <link_name>link</link_name>
        <frame>wamv/ball_shooter_launcher_link</frame>
        <pose>0.14 0 0 0 0 0</pose>
      </projectile>
      <num_shots>4</num_shots>
      <shot_force>300</shot_force>
      <topic>wamv/shooters/ball_shooter/fire</topic>
    </plugin>
  </gazebo>
  <link name="wamv/cpu_cases_link">
    <visual name="cpu_cases_visual">
      <origin rpy="0 0 0" xyz="0.073 0 -1.53"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/cpu_cases/mesh/cpu_cases.dae"/>
      </geometry>
    </visual>
    <collision name="cpu_case_1_collision">
      <origin rpy="0 0 0" xyz="0.185 0 0"/>
      <geometry>
        <box size="0.595 0.83 0.47"/>
      </geometry>
    </collision>
    <collision name="cpu_case_2_collision">
      <origin rpy="0 0 0" xyz="-0.3 0 -0.092"/>
      <geometry>
        <box size="0.375 0.64 0.28"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="20"/>
      <inertia ixx="1.51633333333333" ixy="0" ixz="0" iyy="1.93633333333333" iyz="0" izz="2.71633333333333"/>
    </inertial>
  </link>
  <joint name="wamv/chasis_cpu_cases_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.15 0 1.53"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/cpu_cases_link"/>
  </joint>
  <!-- Monocular Camera -->
  <link name="wamv/left_camera_link">
    <visual name="left_camera_visual">
      <origin rpy="0 0 1.5707963267948966" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="left_camera_lens_collision">
      <origin rpy="0 1.5707963267948966 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="left_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="wamv/left_camera_link_optical">
    </link>
  <!-- Sensor post -->
  <link name="wamv/left_camera_post_link">
    <visual>
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
      <material name="left_camera_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="left_camera_post_collision">
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15885000000000002"/>
      <inertia ixx="0.0004146717033750001" ixy="0" ixz="0" iyy="0.0004146717033750001" iyz="0" izz="4.5875880000000004e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="wamv/left_camera_post_arm_link">
    <visual name="left_camera_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="left_camera_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="wamv/base_to_left_camera_post_joint" type="fixed">
    <origin rpy="0 0 0.5235987755982988" xyz="0.6066987298107781 0.375 1.38475"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/left_camera_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="wamv/left_camera_post_to_left_camera_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.08825000000000008"/>
    <parent link="wamv/left_camera_post_link"/>
    <child link="wamv/left_camera_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to camera joint -->
  <joint name="wamv/left_camera_post_arm_to_left_camera_joint" type="fixed">
    <origin rpy="0 0.17453292519943295 0.0" xyz="0.02 0 0.027"/>
    <parent link="wamv/left_camera_post_arm_link"/>
    <child link="wamv/left_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="wamv/left_camera_to_left_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="wamv/left_camera_link"/>
    <child link="wamv/left_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="wamv/left_camera_link">
    <sensor name="left_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="left_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_left_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>wamv/sensors/cameras/left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>wamv/left_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="wamv/left_camera_post_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Monocular Camera -->
  <link name="wamv/middle_camera_link">
    <visual name="middle_camera_visual">
      <origin rpy="0 0 1.5707963267948966" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="middle_camera_lens_collision">
      <origin rpy="0 1.5707963267948966 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="middle_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="wamv/middle_camera_link_optical">
    </link>
  <!-- Sensor post -->
  <link name="wamv/middle_camera_post_link">
    <visual>
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
      <material name="middle_camera_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="middle_camera_post_collision">
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15885000000000002"/>
      <inertia ixx="0.0004146717033750001" ixy="0" ixz="0" iyy="0.0004146717033750001" iyz="0" izz="4.5875880000000004e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="wamv/middle_camera_post_arm_link">
    <visual name="middle_camera_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="middle_camera_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="wamv/base_to_middle_camera_post_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.75 0.0 1.38475"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/middle_camera_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="wamv/middle_camera_post_to_middle_camera_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.08825000000000008"/>
    <parent link="wamv/middle_camera_post_link"/>
    <child link="wamv/middle_camera_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to camera joint -->
  <joint name="wamv/middle_camera_post_arm_to_middle_camera_joint" type="fixed">
    <origin rpy="0 0.17453292519943295 0" xyz="0.02 0 0.027"/>
    <parent link="wamv/middle_camera_post_arm_link"/>
    <child link="wamv/middle_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="wamv/middle_camera_to_middle_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="wamv/middle_camera_link"/>
    <child link="wamv/middle_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="wamv/middle_camera_link">
    <sensor name="middle_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="middle_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_middle_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>wamv/sensors/cameras/middle_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>wamv/middle_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="wamv/middle_camera_post_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Monocular Camera -->
  <link name="wamv/right_camera_link">
    <visual name="right_camera_visual">
      <origin rpy="0 0 1.5707963267948966" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="right_camera_lens_collision">
      <origin rpy="0 1.5707963267948966 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="right_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="wamv/right_camera_link_optical">
    </link>
  <!-- Sensor post -->
  <link name="wamv/right_camera_post_link">
    <visual>
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
      <material name="right_camera_post_material">
        <color rgba="0.0 0.0 0.0 1.0"/>
      </material>
    </visual>
    <collision name="right_camera_post_collision">
      <geometry>
        <cylinder length="0.17650000000000002" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15885000000000002"/>
      <inertia ixx="0.0004146717033750001" ixy="0" ixz="0" iyy="0.0004146717033750001" iyz="0" izz="4.5875880000000004e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="wamv/right_camera_post_arm_link">
    <visual name="right_camera_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="right_camera_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="wamv/base_to_right_camera_post_joint" type="fixed">
    <origin rpy="0 0 -0.5235987755982988" xyz="0.6066987298107781 -0.375 1.38475"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/right_camera_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="wamv/right_camera_post_to_right_camera_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 0.08825000000000008"/>
    <parent link="wamv/right_camera_post_link"/>
    <child link="wamv/right_camera_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to camera joint -->
  <joint name="wamv/right_camera_post_arm_to_right_camera_joint" type="fixed">
    <origin rpy="0 0.17453292519943295 0.0" xyz="0.02 0 0.027"/>
    <parent link="wamv/right_camera_post_arm_link"/>
    <child link="wamv/right_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="wamv/right_camera_to_right_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="wamv/right_camera_link"/>
    <child link="wamv/right_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="wamv/right_camera_link">
    <sensor name="right_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="right_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_right_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>wamv/sensors/cameras/right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>wamv/right_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="wamv/right_camera_post_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="wamv/gps_wamv_link">
    <visual name="gps_wamv_visual">
      <geometry>
        <mesh filename="package://wamv_gazebo/models/gps/mesh/gps.dae"/>
      </geometry>
    </visual>
    <collision name="gps_wamv_collision_base">
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <cylinder length="0.05" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="gps_wamv_collision_antenna">
      <origin rpy="0 0 0" xyz="0 0 0.11"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.006458" ixy="0.0" ixz="0.0" iyy="0.006458" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <joint name="wamv/gps_wamv_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="-0.85 0 1.3"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/gps_wamv_link"/>
  </joint>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_plugin_gps_wamv">
      <updateRate>15</updateRate>
      <alwaysOn>true</alwaysOn>
      <bodyName>wamv/gps_wamv_link</bodyName>
      <!-- Manually prepend namespace to tf frame. -->
      <frameId>wamv/gps_wamv_link</frameId>
      <topicName>wamv/sensors/gps/gps/fix</topicName>
      <!-- Note that the hector_gazebo_ros_gps plugin uses NWU coordinates
             for reporting velocities.  This may cause problems if localization
             requires velocity in ENU.
             See Issue #64 in VRX project for details
             https://bitbucket.org/osrf/vrx/issues/64 -->
      <velocityTopicName>wamv/sensors/gps/gps/fix_velocity</velocityTopicName>
      <!-- Tell the plugin to use the spherical_coordiantes parameters
	     from SDF.
	     https://github.com/tu-darmstadt-ros-pkg/hector_gazebo/blob/melodic-devel/hector_gazebo_plugins/src/gazebo_ros_gps.cpp#L101
	-->
      <useWorldSphericalCoordinates>true</useWorldSphericalCoordinates>
      <offset>0.0 0.0 0.0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>0 0 0</gaussianNoise>
      <velocityOffset>0.0 0.0 0.0</velocityOffset>
      <velocityDrift>0.0 0.0 0.0</velocityDrift>
      <velocityGaussianNoise>0.0 0.0 0.0</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <link name="wamv/imu_wamv_link">
    <visual name="imu_wamv_visual">
      &gt;
        
      <geometry>
        <box size="0.05 0.025 0.005"/>
      </geometry>
      <material name="imu_wamv_visual_material">
        <color rgba="1.0 0.0 00 1.0"/>
      </material>
    </visual>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000083" ixy="0.0" ixz="0.0" iyy="0.000083" iyz="0.0" izz="0.0125"/>
    </inertial>
  </link>
  <joint name="wamv/imu_wamv_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="0.3 -0.2 1.3"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/imu_wamv_link"/>
  </joint>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_plugin_imu_wamv">
      <updateRate>15</updateRate>
      <bodyName>wamv/imu_wamv_link</bodyName>
      <topicName>wamv/sensors/imu/imu/data</topicName>
      <serviceName>wamv/sensors/imu_service</serviceName>
      <!-- Manually prepend namespace to tf frame. -->
      <frameId>wamv/imu_wamv_link</frameId>
      <alwaysOn>true</alwaysOn>
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelDriftFrequency>0.00027 0.00027 0.000027</accelDriftFrequency>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.00027 0.00027 0.000027</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawDriftFrequency>0.00027</yawDriftFrequency>
      <yawGaussianNoise>0.0</yawGaussianNoise>
    </plugin>
  </gazebo>
  <!-- 3d lidar sensor -->
  <link name="wamv/lidar_wamv_link">
    <visual name="lidar_wamv_visual">
      <origin rpy="0 0 0" xyz="0 0 -0.035"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_wamv_collision">
      <geometry>
        <cylinder length="0.075" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00109375" ixy="0" ixz="0" iyy="0.00109375" iyz="0" izz="0.00125"/>
    </inertial>
  </link>
  <!-- Sensor post -->
  <link name="wamv/lidar_wamv_post_link">
    <!-- <visual>
        <geometry>
          <cylinder radius="${post_radius}" length="${post_length}"/>
        </geometry>
        <material name="${name}_post_material">
          <color rgba="0.0 0.0 0.0 1.0"/>
        </material>
      </visual> -->
    <collision name="lidar_wamv_post_collision">
      <geometry>
        <cylinder length="-0.3465" radius="0.0076"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="-0.31184999999999996"/>
      <inertia ixx="-0.0031246208358749993" ixy="0" ixz="0" iyy="-0.0031246208358749993" iyz="0" izz="-9.006227999999999e-06"/>
    </inertial>
  </link>
  <!-- Sensor post arm -->
  <link name="wamv/lidar_wamv_post_arm_link">
    <visual name="lidar_wamv_post_arm_visual">
      <origin rpy="-1.0471975511965976 0 -1.5707963267948966" xyz="-0.038 0 -0.003"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_wamv_post_arm_collision">
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.065" radius="0.008"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="-1.2042771838760873 0 -1.5707963267948966" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.00003680833" ixy="0" ixz="0" iyy="0.00003680833" iyz="0" izz="0.00000320000"/>
    </inertial>
  </link>
  <joint name="wamv/base_to_lidar_wamv_post_joint" type="fixed">
    <origin rpy="0 0 0" xyz="1.38 0.0 1.12325"/>
    <parent link="wamv/base_link"/>
    <child link="wamv/lidar_wamv_post_link"/>
  </joint>
  <!-- Sensor post to sensor post arm joint -->
  <joint name="wamv/lidar_wamv_post_to_lidar_wamv_post_arm_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.03 0 -0.17325000000000007"/>
    <parent link="wamv/lidar_wamv_post_link"/>
    <child link="wamv/lidar_wamv_post_arm_link"/>
  </joint>
  <!-- Sensor post arm to lidar joint -->
  <joint name="wamv/lidar_wamv_post_arm_to_lidar_wamv_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.04 0 0.05"/>
    <parent link="wamv/lidar_wamv_post_arm_link"/>
    <child link="wamv/lidar_wamv_link"/>
  </joint>
  <gazebo reference="wamv/lidar_wamv_link">
    <sensor name="lidar_wamv_sensor" type="gpu_ray">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>18750.0</samples>
            <resolution>0.1</resolution>
            <min_angle>-3.141592653589793</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.2617993877991494</min_angle>
            <max_angle>0.2617993877991494</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>130</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="lidar_wamv_plugin">
        <topicName>wamv/sensors/lidars/lidar_wamv/points</topicName>
        <frameName>wamv/lidar_wamv_link</frameName>
        <min_intensity>0</min_intensity>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="wamv/lidar_wamv_post_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!--specs for 16 beam lidar are implemented by default.
          See wamv_3d_lidar for those-->
  <!-- Add pinger -->
  <!-- <xacro:wamv_pinger name="pinger" position="1.0 0 -1.0" /> -->
  <!-- Add ball shooter (default pitch angle: ~-60 deg) -->
  <!-- <xacro:wamv_ball_shooter name="ball_shooter" x="0.54" y="0.30" z="1.296" pitch="-1.04"/> -->
  <link name="wamv/helipad_plate">
    <visual>
      <geometry>
        <!-- <mesh filename="package://wamv_description/models/helipad.dae" /> -->
        <box size="1.5 1.0 0.01"/>
      </geometry>
    </visual>
    <collision name="helipad_plate_collision">
      <geometry>
        <!-- <mesh filename="package://wamv_description/models/helipad.dae" /> -->
        <box size="1.5 1.0 0.01"/>
      </geometry>
    </collision>
    <collision name="cylinder_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_to_helipad_plate" type="fixed">
    <parent link="wamv/base_link"/>
    <child link="wamv/helipad_plate"/>
    <origin xyz="-0.24 0 1.77"/>
  </joint>
  <link name="wamv/holed_helipad_plate">
    <visual>
      <geometry>
        <mesh filename="package://wamv_description/models/helipad_hole.dae"/>
        <!-- <box size="1.5 1.0 0.01" /> -->
      </geometry>
    </visual>
    <collision name="helipad_plate_collision">
      <geometry>
        <mesh filename="package://wamv_description/models/helipad_hole.dae"/>
        <!-- <box size="1.5 1.0 0.01" /> -->
      </geometry>
    </collision>
    <collision name="cylinder_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.01" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="base_to_holed_helipad_plate" type="fixed">
    <parent link="wamv/base_link"/>
    <child link="wamv/holed_helipad_plate"/>
    <origin xyz="-0.24 0 1.78"/>
  </joint>
  <link name="gps::link">
    <visual name="mavlink_wamv_visual">
      <geometry>
        <box size="0.0005 0.00025 0.005"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000083" ixy="0.0" ixz="0.0" iyy="0.000083" iyz="0.0" izz="0.0125"/>
    </inertial>
  </link>
  <joint name="gps_joint" type="revolute">
    <parent link="wamv/base_link"/>
    <child link="gps::link"/>
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-3.141592653589793" upper="3.141592653589793" velocity="0.01"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <gazebo reference="gps::link">
    <sensor name="gps" type="gps">
      <update_rate>5.0</update_rate>
      <always_on>true</always_on>
      <visualize>false</visualize>
      <plugin filename="libgazebo_gps_plugin.so" name="mavlink_gps_plugin">
        <robotNamespace/>
        <gpsNoise>true</gpsNoise>
        <gpsXYRandomWalk>2.0</gpsXYRandomWalk>
        <gpsZRandomWalk>4.0</gpsZRandomWalk>
        <gpsXYNoiseDensity>2.0e-4</gpsXYNoiseDensity>
        <gpsZNoiseDensity>4.0e-4</gpsZNoiseDensity>
        <gpsVXYNoiseDensity>0.2</gpsVXYNoiseDensity>
        <gpsVZNoiseDensity>0.4</gpsVZNoiseDensity>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_barometer_plugin.so" name="barometer_plugin">
      <robotNamespace/>
      <pubRate>50</pubRate>
      <baroTopic>/baro</baroTopic>
      <baroDriftPaPerSec>0</baroDriftPaPerSec>
    </plugin>
    <plugin filename="libgazebo_magnetometer_plugin.so" name="magnetometer_plugin">
      <robotNamespace/>
      <pubRate>100</pubRate>
      <noiseDensity>0.0004</noiseDensity>
      <randomWalk>6.4e-06</randomWalk>
      <biasCorrelationTime>600</biasCorrelationTime>
      <magTopic>/mag</magTopic>
    </plugin>
    <plugin filename="libgazebo_groundtruth_plugin.so" name="groundtruth_plugin">
      <robotNamespace/>
    </plugin>
    <plugin filename="libgazebo_imu_plugin.so" name="gazebo_imu_plugin">
      <robotNamespace/>
      <linkName>wamv/base_link</linkName>
      <imuTopic>/imu</imuTopic>
      <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
    </plugin>
    <plugin filename="libgazebo_mavlink_interface.so" name="mavlink_interface">
      <robotNamespace/>
      <imuSubTopic>/imu</imuSubTopic>
      <magSubTopic>/mag</magSubTopic>
      <baroSubTopic>/baro</baroSubTopic>
      <mavlink_addr>INADDR_ANY</mavlink_addr>
      <mavlink_tcp_port>4560</mavlink_tcp_port>
      <mavlink_udp_port>14560</mavlink_udp_port>
      <serialEnabled>0</serialEnabled>
      <serialDevice>/dev/ttyACM0</serialDevice>
      <baudRate>921600</baudRate>
      <qgc_addr>INADDR_ANY</qgc_addr>
      <qgc_udp_port>14550</qgc_udp_port>
      <sdk_addr>INADDR_ANY</sdk_addr>
      <sdk_udp_port>14540</sdk_udp_port>
      <hil_mode>0</hil_mode>
      <hil_state_level>false</hil_state_level>
      <enable_lockstep>true</enable_lockstep>
      <use_tcp>1</use_tcp>
      <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      <control_channels>
        <channel name="left_rotor">
          <input_index>0</input_index>
          <input_offset>0</input_offset>
          <input_scaling>100</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
          <joint_name>wamv/left_engine_propeller_joint</joint_name>
        </channel>
        <channel name="right_rotor">
          <input_index>1</input_index>
          <input_offset>0</input_offset>
          <input_scaling>100</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
          <joint_name>wamv/right_engine_propeller_joint</joint_name>
        </channel>
      </control_channels>
    </plugin>
  </gazebo>
  <link name="wamv/red_ball">
    <visual>
      <geometry>
        <sphere radius="0.1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="red_ball_joint" type="fixed">
    <parent link="wamv/base_link"/>
    <child link="wamv/red_ball"/>
    <origin xyz="-0.2 0 1.9"/>
  </joint>
  <gazebo reference="wamv/red_ball">
    <material>Gazebo/Red</material>
  </gazebo>
  <material name="Red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <link name="wamv/red_torus_link">
    <visual>
      <geometry>
        <mesh filename="package://wamv_description/models/torus.stl"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://wamv_description/models/torus.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="red_torus_joint" type="fixed">
    <parent link="wamv/base_link"/>
    <child link="wamv/red_torus_link"/>
    <origin xyz="-0.2 0 2"/>
  </joint>
  <gazebo reference="wamv/red_torus_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <link name="wamv/green_landing_cylinder_link">
    <visual>
      <geometry>
        <cylinder length="0.01" radius="0.1"/>
      </geometry>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.01" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="green_landing_cylinder_joint" type="fixed">
    <parent link="wamv/base_link"/>
    <child link="wamv/green_landing_cylinder_link"/>
    <origin xyz="-0.24 0 1.78"/>
  </joint>
  <gazebo reference="wamv/green_landing_cylinder_link">
    <material>Gazebo/Green</material>
  </gazebo>
</robot>
